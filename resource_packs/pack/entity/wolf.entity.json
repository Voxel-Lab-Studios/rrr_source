{
    "format_version": "1.8.0",
    "minecraft:client_entity": {
        "description": {
            "identifier": "minecraft:wolf",
            "materials": {
                "default": "wolf",
                "hp": "entity_emissive_alpha"
            },
            "geometry": {
                "default": "geometry.wolf",
                "health_bar": "geometry.health_bar",
                "heart": "geometry.heart",
                "dmg": "geometry.dmg"
            },
            "animations": {
                "wolf_setup": "animation.wolf.setup",
                "wolf_baby_scaling": "animation.wolf.baby_scaling",
                "wolf_look_at": "animation.common.look_at_target",
                "wolf_head_rot_z": "animation.wolf.head_rot_z",
                "wolf_tail_default": "animation.wolf.tail_default",
                "wolf_angry": "animation.wolf.angry",
                "wolf_sitting": "animation.wolf.sitting",
                "wolf_shaking": "animation.wolf.shaking",
                "wolf_leg_default": "animation.wolf.leg_default"
            },
            "animation_controllers": [
                {
                    "wolf_shaking": "controller.animation.wolf.shaking"
                },
                {
                    "wolf_setup": "controller.animation.wolf.setup"
                },
                {
                    "wolf_look_at": "controller.animation.wolf.look_at"
                },
                {
                    "wolf_baby_scaling": "controller.animation.wolf.baby_scaling"
                },
                {
                    "wolf_head_rot_z": "controller.animation.wolf.head_rot_z"
                },
                {
                    "wolf_tail_default": "controller.animation.wolf.tail_default"
                },
                {
                    "wolf_angry": "controller.animation.wolf.angry"
                },
                {
                    "wolf_sitting": "controller.animation.wolf.sitting"
                },
                {
                    "dmg_controller": "controller.animation.damage.root"
                },
                {
                    "hp_offset": "animation.health_wolf"
                },
                {
                    "health_percentage": "animation.health_bar.percentage"
                }
            ],
            "render_controllers": [
                "controller.render.wolf",
                "controller.render.health_bar",
                "controller.render.heart",
                "controller.render.first_digit",
                "controller.render.second_digit",
                "controller.render.third_digit",
                "controller.render.dmg"
            ],
            "spawn_egg": {
                "texture": "spawn_egg",
                "texture_index": 4
            },
            "scripts": {
                "pre_animation": [
                    "variable.body_shake_angle = 0.05 * query.frame_alpha + query.shake_angle;",
                    "variable.body_roll_progress = Math.clamp((variable.body_shake_angle - 0.16) / 1.8, 0, 1);",
                    "variable.body_rot_z = Math.sin(variable.body_roll_progress * 180) * Math.sin(variable.body_roll_progress * 1980) * 27;",
                    "variable.upper_body_roll_progress = Math.clamp((variable.body_shake_angle - 0.08) / 1.8, 0, 1);",
                    "variable.upper_body_rot_z = (Math.sin(variable.upper_body_roll_progress * 180) * Math.sin(variable.upper_body_roll_progress * 1980) * 27) - variable.body_rot_z;",
                    "variable.tail_roll_progress = Math.clamp((variable.body_shake_angle - 0.2) / 1.8, 0, 1);",
                    "variable.tail_rot_z = (Math.sin(variable.tail_roll_progress * 180) * Math.sin(variable.tail_roll_progress * 1980) * 27) - variable.body_rot_z;",
                    "variable.head_roll_progress = Math.clamp(variable.body_shake_angle / 1.8, 0, 1);",
                    "variable.head_rot_z = (Math.sin(variable.head_roll_progress * 180) * Math.sin(variable.head_roll_progress * 1980) * 27) - variable.body_rot_z;",
                    "variable.health = query.health / query.max_health;",
                    "variable.health_color = math.round(query.health / query.max_health * 100) >= 50 ? 0 : ((math.round(query.health / query.max_health * 100) >= 25 && math.round(query.health / query.max_health * 100) < 50) ? 1 : 2);",
                    "variable.first_digit = math.floor(query.health / 100);",
                    "variable.second_digit = math.floor((math.mod(query.health, 100)) / 10);",
                    "variable.third_digit = query.health - ((math.floor(query.health / 10)) * 10);"
                ]
            },
            "particle_effects": {
                "dmg": "particle:damage"
            },
            "textures": {
                "default": "textures/entity/wolf/wolf",
                "angry": "textures/entity/wolf/wolf_angry",
                "tame": "textures/entity/wolf/wolf_tame",
                "health_green": "textures/heart/health_bar_green",
                "health_yellow": "textures/heart/health_bar_yellow",
                "health_red": "textures/heart/health_bar_red",
                "heart": "textures/heart/heart",
                "heart0": "textures/heart/heart0",
                "heart1": "textures/heart/heart1",
                "heart2": "textures/heart/heart2",
                "heart3": "textures/heart/heart3",
                "heart4": "textures/heart/heart4",
                "heart5": "textures/heart/heart5",
                "heart6": "textures/heart/heart6",
                "heart7": "textures/heart/heart7",
                "heart8": "textures/heart/heart8",
                "heart9": "textures/heart/heart9"
            }
        }
    }
}